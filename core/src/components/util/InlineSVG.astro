---
import { parse } from 'node-html-parser';
// svgo is a peer dependency of astro-icon
import type { Attributes } from 'node-html-parser/dist/nodes/html';
import { optimize } from 'svgo';

export interface Props extends Attributes {
  src: string;
}

interface SVGFile {
  default: string;
  file: string;
}

const { src, ...attributes } = Astro.props;
const res = import.meta.glob('/src/**/*.svg', {
  eager: true,
  query: '?raw',
}) as Record<string, SVGFile>;

if (!(src in res)) {
  throw new Error(`${src} not found`);
}

// parse to sanitize
const pre = parse(res[src].default).toString();
const { data: optimized } = optimize(pre, {
  multipass: true,
  plugins: [
    {
      name: 'preset-default',
      params: {
        overrides: {
          removeViewBox: false,
          cleanupIds: false,
        },
      },
    },
  ],
});

const root = parse(optimized);
let svg = root.querySelector('svg');
delete svg.attrs.height;
delete svg.attrs.width;
svg.setAttributes({ ...svg.attrs, ...attributes });

const html = root.toString();
---

<Fragment set:html={html} />
