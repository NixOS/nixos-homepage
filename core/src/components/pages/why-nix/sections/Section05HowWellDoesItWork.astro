---
import Button from '@/components/ui/Button.astro';
---

<div class="grid grid-cols-3 gap-4">
  <div>
    <h3 class="font-heading text-2xl font-bold">... My Codebase?</h3>
    <p>
      Due to its functional nature and large package ecosystem, Nix can handle
      many different types of environments. From small bash scripts to large
      monorepos with multiple languages and frameworks, Nix can manage the
      dependencies and build processes effectively.
    </p>
    <p>
      With <a>Devshells</a> you can ship all your projects dependencies and tools
      while setting up the environment automatically. This ensures that everyone
      working on the project has the same setup, reducing "it works on my machine"
      issues.
    </p>
    <div class="flex gap-2 pt-4">
      <Button href="https://nixos.org" size="sm" color="nixblue">
        Devshells
      </Button>
      <Button href="https://search.nixos.org" size="sm" color="nixblue">
        Packages
      </Button>
    </div>
  </div>
  <div>
    <h3 class="font-heading text-2xl font-bold">... My Operating System?</h3>
    <p>
      With Nix being a package manager you can use it on top of your existing
      operating system. This allows you to use and manage packages in an
      isolated manner, without interfering with the system packages. Nix works
      on various operating systems, including Linux distributions (like Ubuntu,
      Fedora, Arch Linux, etc.) and macOS. This cross-platform compatibility
      makes Nix a versatile choice for developers working in diverse
      environments.
    </p>
    <p>
      Various community projects also allow you to manage home-environments and
      operating system configs (non-NixOS) using Nix.
    </p>
  </div>
  <div>
    <h3 class="font-heading text-2xl font-bold">... My Hardware?</h3>
    <p>
      When it comes to shipping and managing entire operating systems, the Nix
      ecosystem offers powerful tools like NixOS. NixOS is a Linux distribution
      built around the Nix package manager, allowing you to declaratively define
      your entire system configuration. This means you can specify everything
      from installed packages to system services and configurations in one
      configuration. NixOS is available for a wide range of hardware
      architectures, including x86_64, ARM, and more. This makes it a versatile
      choice for various devices, from servers to desktops to embedded systems.
    </p>
  </div>
</div>
