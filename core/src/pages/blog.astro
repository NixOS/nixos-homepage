---
import { getCollection, getEntry } from 'astro:content';
import Container from '../components/layout/Container.astro';
import PageHeader from '../components/layout/PageHeader.astro';
import BlogList from '../components/pages/blog/BlogList.astro';
import BlogListEntry from '../components/pages/blog/BlogListEntry.astro';
import InlineSVG from '../components/util/InlineSVG.astro';
import Layout from '../layouts/Layout.astro';

const posts = await getCollection('blog');
posts
  .sort((a, b) => {
    const dateA = new Date(a.data.date);
    const dateB = new Date(b.data.date);
    return dateA > dateB ? -1 : 1;
  })
  .reverse();
const blogMenu = await getEntry('menus', 'blog');
---

<script>
  const articles = document.querySelectorAll('article');
  let categories = [];

  function refreshCategories() {
    const categoryCheckboxes = Array.prototype.slice.call(
      document.getElementsByName('category'),
    );
    categories = categoryCheckboxes.map((checkbox) => {
      return checkbox.checked ? checkbox.value : null;
    });
  }

  function refreshArticles() {
    articles.forEach((article) => {
      const isInQuery = categories.includes(article.dataset.category);
      article.ariaHidden = !isInQuery ? 'true' : 'false';
      if (!isInQuery) article.classList.add('hidden');
      else article.classList.remove('hidden');
    });
  }

  document.getElementsByName('category').forEach((checkbox) => {
    checkbox.addEventListener('change', () => {
      refreshCategories();
      refreshArticles();
    });
  });

  refreshCategories();
  refreshArticles();
</script>

<Layout title="Blog">
  <PageHeader text="Blog" />
  <Container class="py-8">
    <p class="text-nix-blue mb-2 text-center text-2xl font-light">
      Click boxes to filter content
    </p>
    <div
      role="group"
      class="flex flex-col justify-center pb-8 md:flex-row md:items-center md:gap-4"
    >
      {
        blogMenu.data.map((e) => (
          <div class="flex flex-row gap-4 md:flex-col">
            <div class="flex-1">
              <input
                name="category"
                type="checkbox"
                role="checkbox"
                id={`check-${e.id}`}
                value={e.id}
                class="peer h-0 w-0 opacity-0"
                checked
              />
              <label
                for={`check-${e.id}`}
                class="border-nix-blue fill-nix-blue text-nix-blue before:icon-[mdi--checkbox-blank-outline] peer-checked:before:icon-[mdi--checkbox-marked-outline] hover:bg-nix-blue-darker peer-checked:bg-nix-blue peer-checked:hover:border-nix-blue-darker peer-checked:hover:bg-nix-blue-darker relative flex w-full cursor-pointer items-center gap-2 rounded-2xl border-1 p-4 peer-checked:fill-white peer-checked:text-white peer-focus:ring-2 peer-focus:ring-black peer-focus:ring-offset-2 before:absolute before:right-4 before:block before:h-8 before:w-8 peer-checked:before:absolute peer-checked:before:block peer-checked:before:h-8 peer-checked:before:w-8 hover:fill-white hover:text-white md:w-auto md:flex-col md:p-8 md:before:top-2 md:before:right-2"
              >
                <InlineSVG src={e.icon} class="w-12 md:w-24" />
                <span class="font-light">{e.title}</span>
              </label>
            </div>
            <div class="pt-6 md:hidden">
              <label class="border-nix-blue fill-nix-blue text-nix-blue hover:bg-nix-blue-darker peer-checked:bg-nix-blue peer-checked:hover:border-nix-blue-darker peer-checked:hover:bg-nix-blue-darker relative flex w-full cursor-pointer items-center gap-2 rounded-2xl border-1 p-4 peer-checked:fill-white peer-checked:text-white peer-focus:ring-2 peer-focus:ring-black peer-focus:ring-offset-2 hover:fill-white hover:text-white md:w-auto md:flex-col md:p-8">
                <a href={'/blog/' + e.id + '-rss.xml'}>
                  <InlineSVG
                    src="/src/assets/image/blog-menu/rss.svg"
                    class="inline-block h-12 w-12"
                  />
                </a>
              </label>
            </div>
            <div
              class="rss-small hidden flex-row md:flex"
              style="justify-content: center"
            >
              <a href={'/blog/' + e.id + '-rss.xml'}>
                <InlineSVG
                  src="/src/assets/image/blog-menu/rss.svg"
                  class="inline-block h-4 w-4"
                />
                rss
              </a>
            </div>
          </div>
        ))
      }
    </div>
    <BlogList />
    {
      posts.reverse().map(async (post) => {
        return <BlogListEntry post={post} />;
      })
    }
  </Container>
</Layout>
