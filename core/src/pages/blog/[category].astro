---
import { getCollection } from 'astro:content';
import PageHeader from '../../components/layout/PageHeader.astro';
import BlogList from '../../components/pages/blog/BlogList.astro';
import BlogListEntry from '../../components/pages/blog/BlogListEntry.astro';
import Layout from '../../layouts/Layout.astro';
import Container from '.././../components/layout/Container.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');

  const filteredEntries = blogEntries.reduce((groups, entry) => {
    const category = entry.id.split('/')[0];
    if (!groups[category]) {
      groups[category] = {
        params: {
          category: category,
        },
        props: { entries: [], category: category },
      };
    }
    groups[category].props.entries.push(entry);
    return groups;
  }, {});

  return Array.from(
    Object.keys(filteredEntries),
    (key) => filteredEntries[key],
  );
}

const { entries, category } = Astro.props;

const upperCaseCategory = category.charAt(0).toUpperCase() + category.slice(1);
---

<Layout title={`Blog/${upperCaseCategory}`}>
  <PageHeader text={`Blog / ${upperCaseCategory}`} />
  <Container class="py-8">
    <BlogList />
    {
      entries.map(async (post) => {
        return <BlogListEntry post={post} />;
      })
    }
  </Container>
</Layout>
