#!/bin/sh

# This script installs the Nix package manager on your system by
# downloading a binary distribution and running its installer script
# (which in turn creates and populates /nix).

{ # Prevent execution if this script was only partially downloaded
require_util() {
    type "$1" > /dev/null 2>&1 || which "$1" > /dev/null 2>&1 ||
        oops "you do not have '$1' installed, which I need to $2"
}
require_util curl "download the binary tarball"
require_util bzcat "decompress the binary tarball"
require_util tar "unpack the binary tarball"
require_util shasum "verify the binary tarball"

oops() {
    echo "$0: $@" >&2
    exit 1
}

retain=
if [ -n "$NIX_DL" ] && [ -d "$NIX_DL" ]; then
    tmpDir="$NIX_DL"
    retain="true"
    echo "Reusing data at $tmpDir"
else
    tmpDir="$(mktemp -d -t nix-binary-tarball-unpack.XXXXXXXXXX || \
        oops "Can\'t create temporary directory for downloading the Nix binary tarball")"
fi
cleanup() {
    if [ "$retain" == "true" ]; then
        exec 1>&2
        echo ">>> Failed. Retaining download at $tmpDir"
        echo ">>> To try again, run 'export NIX_DL=\"$tmpDir\"' before running the install"
        echo ">>> otherwise, please remove $tmpDir manually."
    else
        rm -rf "$tmpDir"
    fi
}
trap cleanup EXIT INT QUIT TERM

case "$(uname -s).$(uname -m)" in
    Linux.x86_64) system=x86_64-linux; hash=3934610bdc68b276a362b9079b18dd6d28221a727ec71ed3a3a11fddcee59dd2fa1ac401b3a25d668e880c04bcd4c971cf82861820b5ff678353f7e7ba1bfc41;;
    Linux.i?86) system=i686-linux; hash=fa52b31a63603be5370c2a25ca9b192fbb8f50038904a9a4d590a6abefdb3b46c362d1f49dbee5fa09175ebdcbb84317615a3d647197da1485f5543d7ff7fc0a;;
    Darwin.x86_64) system=x86_64-darwin; hash=0af3f2ca025fae9e026ce0ad53852d05faa0f11cf2a3be239d5dfec1a2c7f47cb9a43a17cd4c5894064fa9e99b444ab80b9ca0659011a21dc79269758c631ef6;;
    *) oops "sorry, there is no binary distribution of Nix for your platform";;
esac

url="https://nixos.org/releases/nix/nix-[%latestNixVersion%]/nix-[%latestNixVersion%]-$system.tar.bz2"

tarball="$tmpDir/$(basename $tmpDir/nix-[%latestNixVersion%]-$system.tar.bz2)"

checkTar() {
    if [ -r "$tarball" ]; then
        hash2="$(shasum -a 512 -b "$tarball" | cut -c1-128)"
        [[ $hash == $hash2 ]]
    else
        false
    fi
}
if ! checkTar; then
    echo "downloading Nix binary tarball for $system from '$url' to '$tmpDir'..."
    curl -L "$url" -o "$tarball" || oops "failed to download '$url'"

    checkTar || oops "SHA-512 hash mismatch in '$url'; expected $hash, got $hash2"
fi

retain=true

unpack=$tmpDir/unpack
checkScript() {
    script=$(echo "$unpack"/*/install)
    [ -e "$script" ]
}
if ! checkScript; then
    mkdir -p "$unpack"
    < "$tarball" bzcat | tar x -C "$unpack" || oops "failed to unpack '$url'"

	checkScript || oops "installation script is missing from the binary tarball!"
fi

if "$script"; then
    retain=false
fi
} # End of wrapping
