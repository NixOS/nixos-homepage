name: 'CI - Pull Request'

on:
  pull_request_target:
    paths-ignore:
      - '**/package.json'
      - '**/flake.nix'
      - '**/default.nix'

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  check:
    name: 'Check nixos.org PR'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: read
    steps:
      - name: 'Checking out the PR repository'
        uses: 'actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8' # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
          persist-credentials: false
          clean: true

      - name: 'Installing Nix'
        uses: 'cachix/install-nix-action@a809471b5c7c913aa67bec8f459a11a0decc3fce' # v31.6.2

      - name: 'Install npm dependencies'
        run: |
          npm install --workspaces --include-workspace-root

      - name: 'Check formatting'
        run: |
          npm exec --package=prettier -c 'prettier --check ./core/src'

      - name: 'Lint'
        run: |
          npm exec --package=eslint -c 'eslint'

  build:
    name: 'Build nixos.org PR'
    runs-on: 'ubuntu-latest'
    needs: check
    permissions:
      contents: read # to fetch PR changes
      pull-requests: write # to post PR comments
      statuses: write # to set commit status
    steps:
      - name: 'Checking out the PR repository'
        uses: 'actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8' # v5.0.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
          persist-credentials: false
          clean: true

      - name: 'Installing Nix'
        uses: 'cachix/install-nix-action@a809471b5c7c913aa67bec8f459a11a0decc3fce' # v31.6.2

      - name: 'Build'
        run: |
          nix build
          mkdir -p ./build
          cp -RL ./result/* ./build/

      - name: 'Publish to Netlify'
        uses: 'nwtgck/actions-netlify@4cbaf4c08f1a7bfa537d6113472ef4424e4eb654' # v3.0.0
        env:
          NETLIFY_AUTH_TOKEN: '${{ secrets.NETLIFY_AUTH_TOKEN }}'
          NETLIFY_SITE_ID: '${{ secrets.NETLIFY_SITE_ID }}'
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
          deploy-message: 'Published from GitHub Actions'
          publish-dir: './build'

          enable-pull-request-comment: true
          overwrites-pull-request-comment: false
          enable-commit-comment: false
          enable-commit-status: true

          alias: "${{ github.event_name == 'push' && github.ref_name || '' }}"

          enable-github-deployment: false
