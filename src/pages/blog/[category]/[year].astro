---
import { getCollection } from "astro:content";
import Container from "../../../components/layout/Container.astro";
import PageHeader from "../../../components/layout/PageHeader.astro";
import Layout from "../../../layouts/Layout.astro";
import BlogListEntry from "../../../components/pages/blog/BlogListEntry.astro";
import BlogList from "../../../components/pages/blog/BlogList.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");

  const filteredEntries = blogEntries.reduce((groups, entry) => {
    const category = entry.slug.split("/")[0];
    const postYear = (new Date(entry.data.date)).getFullYear()
    if (!groups[category+postYear]) {
      groups[category+postYear] = {
        params: {
          category: category,
          year: postYear
        },
        props: { entries: [], category: category, year: postYear },
      };
    }
    groups[category+postYear].props.entries.push(entry);
    return groups;
  }, {});

  return Array.from( Object.keys(filteredEntries), key => filteredEntries[key] );
}

const { entries, category, year } = Astro.props;
---

<Layout title={`Blog/${category}/${year}`}>
    <PageHeader text={`Blog / ${category} / ${year}`} />
    <Container class="py-8">
      <BlogList />
        {
          entries.reverse().map(async (post) => {
            return (
              <BlogListEntry post={post} />
            );
          })
        }
      </BlogList>
    </Container>
  </Layout>