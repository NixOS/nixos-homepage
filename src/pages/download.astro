---

import Layout from '../layouts/Layout.astro';
import CodeBlock from "../components/layout/CodeBlock.astro";
import CodeInline from "../components/layout/CodeInline.astro";
import Container from "../components/layout/Container.astro";
import DownloadHeader from "../components/layout/DownloadHeader.astro";
import PageHeader from "../components/layout/PageHeader.astro";
import Tabs from "../components/layout/Tabs.astro";
import Button from "../components/ui/Button.astro";

const nixLinuxMultiUserInstall = [
  {"shellPrompt":"$", "code":" sh <(curl -L https://nixos.org/nix/install) --daemon" },
];
const nixLinuxSingleUserInstall = [
  {"shellPrompt":"$", "code":" sh <(curl -L https://nixos.org/nix/install) --no-daemon" },
];
const nixMacOSMultiUserInstall = [
  {"shellPrompt":"$", "code":" sh <(curl -L https://nixos.org/nix/install)" },
];
const nixWSL2MultiUserInstall = [
  {"shellPrompt":"$", "code":" sh <(curl -L https://nixos.org/nix/install) --daemon" },
];
const nixWSL2SingleUserInstall = [
  {"shellPrompt":"$", "code":" sh <(curl -L https://nixos.org/nix/install) --no-daemon" },
];
const nixDockerInstallInstruction1 = [
  {"shellPrompt":"$", "code":" docker run -it nixos/nix" },
];
const nixDockerInstallInstruction2 = [
  {"shellPrompt":"$", "code":" mkdir workdir" },
  {"shellPrompt":"$", "code":" docker run -it -v $(pwd)/workdir:/workdir nixos/nix" },
];
const nixDockerInstallInstruction3 = [
  {"shellPrompt":"$", "code":" git clone --depth=1 https://github.com/NixOS/nixpkgs.git" },
  {"shellPrompt":"$", "code":" docker run -it -v $(pwd)/nixpkgs:/nixpkgs nixos/nix" },
  {"shellPrompt":"docker>", "code":" nix-build -I nixpkgs=/nixpkgs -A hello" },
  {"shellPrompt":"docker>", "code":" find ./result # this symlink points to the build package" },
];

---

<Layout title="Download">
  <PageHeader text="Download" />

  <DownloadHeader title="Nix: the package manager" currentVersion="2.19.1" />

  <Tabs class="" class:list={['']}>
    <Fragment slot="tab-1">Linux</Fragment>
    <Fragment slot="tab-2">MacOS</Fragment>
    <Fragment slot="tab-3">Windows (WSL2)</Fragment>
    <Fragment slot="tab-4">Docker</Fragment>
    <Fragment slot="tab-5">More ...</Fragment>

    <Fragment slot="panel-1">
      <div class="flex flex-col justify-center gap-4 font-light">
        <h3 class="text-2xl font-bold text-nixdarkblue pb-2">
          Multi-user installation (recommended)
        </h3>
        <p>
          Install Nix via the
          <span class="font-bold">recommended </span>
          <a href="/manual/nix/stable/installation/multi-user">multi-user installation</a>:
        </p>
        <CodeBlock lines={nixLinuxMultiUserInstall} />
        <p>
          We recommend the multi-user install if you are on Linux running systemd,
          with SELinux disabled and you can authenticate with <CodeInline>sudo</CodeInline>.
        </p>
        <h3 class="text-2xl font-bold text-nixdarkblue pb-2">
          Single-user installation
        </h3>
        <p>
          Install Nix via the
          <a href="/manual/nix/stable/installation/single-user">single-user installation</a>:
        </p>
        <CodeBlock lines={nixLinuxSingleUserInstall} />
        <p>
          Above command will perform a single-user installation of Nix,
          meaning that <CodeInline>/nix</CodeInline> is owned by the invoking user.
          You should run this under your usual user account,
          not as <CodeInline>root</CodeInline>.
          The script will invoke  <CodeInline>sudo</CodeInline> to create <CodeInline>/nix</CodeInline> if it doesn’t already exist.
        </p>

        <h3 class="text-2xl font-bold text-nixdarkblue pb-2">
          Which type of installation should you choose?
        </h3>
        <p>
          This depends on your requirements, but here is a short list of reasons why <span class="font-bold">we recommend </span>
          <a href="/manual/nix/stable/installation/multi-user">multi-user installation</a>:
        </p>

        <h5 class="text-2xl font-bold text-neutral-500">Pros</h5>
        <ul class="list-disc ml-[1rem]">
          <li>Better build isolation (and that is what Nix is all about)</li>
          <li>Better security (a build can not write somewhere in your home)</li>
          <li>Sharing builds between users</li>
        </ul>

        <h5 class="text-2xl font-bold text-neutral-500">Cons</h5>
        <ul class="list-disc ml-[1rem]">
          <li>Requires <CodeInline>root</CodeInline> to run the daemon</li>
          <li>More involved installation (creation of <CodeInline>nixbld* users</CodeInline>, installing a systemd unit, ...</li>
          <li>Harder to uninstall</li>
        </ul>
      </div>
    </Fragment>

    <Fragment slot="panel-2">
      <div class="flex flex-col justify-center gap-4 font-light">
        <h3 class="text-2xl font-bold text-nixdarkblue pb-2">
          Multi-user installation
        </h3>
        <p>
          Install Nix via the <span class="font-bold">recommended </span>
          <a href="/manual/nix/stable/installation/multi-user">multi-user installation</a>:
        </p>
        <CodeBlock lines={nixMacOSMultiUserInstall} />
        <p>
          We believe we have ironed out how to cleanly support the read-only root on modern macOS.
          Please
          <a href="/manual/nix/stable/installation/installing-binary#macos-installation">consult the manual</a>
          on details what the installation script does.
        </p>
      </div>
    </Fragment>

    <Fragment slot="panel-3">
      <div class="flex flex-col justify-center gap-4 font-light">
        <h3 class="text-2xl font-bold text-nixdarkblue pb-2">
          Multi-user installation (Requires WSL with systemd enabled)
        </h3>
        <p>
          WSL versions 0.67.6 and above has systemd support.
          Follow
          <a href="https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/">Microsoft's systemd guide</a>
          to configure it, and then install Nix using:
        </p>
        <CodeBlock lines={nixWSL2MultiUserInstall} />
        <h3 class="text-2xl font-bold text-nixdarkblue pb-2">
          Single-user installation
        </h3>
        <p>
          Install Nix via the
          <a href="/manual/nix/stable/installation/single-user">single-user installation</a>:
        </p>
        <CodeBlock lines={nixWSL2SingleUserInstall} />
      </div>
    </Fragment>

    <Fragment slot="panel-4">
      <div class="flex flex-col justify-center gap-4 font-light">
        <p>
          Start a Docker shell with Nix:
        </p>
        <CodeBlock lines={nixDockerInstallInstruction1} />
        <p>
          Or start a Docker shell with Nix exposing a <CodeInline>workdir</CodeInline> directory:
        </p>
        <CodeBlock lines={nixDockerInstallInstruction2} />
        <p>
          The <CodeInline>workdir</CodeInline> example from above can be also used to start hacking on nixpkgs:
        </p>
        <CodeBlock lines={nixDockerInstallInstruction3} />
      </div>
    </Fragment>

    <Fragment slot="panel-5">
      <div class="flex flex-col justify-center gap-4 font-light">
        <p>
          The following release items are also available:
        </p>
        <ul class="list-disc ml-[1rem]">
          <li>
            <a href="/manual/nix/stable/release-notes/rl-2.19">Release notes</a>
          </li>
          <li>
            <a href="/manual/nix/stable">Manual</a>.
            Please read the <a href="/manual/nix/stable/quick-start">“Quick Start” section of the manual</a>
            for an overview of how to install and use Nix.
          </li>
          <li>
            Old releases are <a href="https://releases.nixos.org/?prefix=nix">also available</a>.
          </li>
        </ul>
      </div>
    </Fragment>
  </Tabs>

  <DownloadHeader title="NixOS: the Linux distribution" currentVersion="23.05" />

</Layout>
