---
import Layout from "../layouts/Layout.astro";
import Container from "../components/layout/Container.astro";
import Button from "../components/ui/Button.astro";
import NixosSearchInput from "../components/ui/NixosSearchInput.astro";
import { getCollection, getEntry } from "astro:content";
import { Image } from "astro:assets";
import { generatePathFromPost, createExcerpt } from "../lib/utils"
import Asciinema from "../components/ui/Asciinema.astro";
const landingFeatures = await getCollection("landing-features");
const demos = await getEntry("landing", "demos");
const posts = await getCollection("blog");
posts.sort((a, b) => {
  const dateA = new Date(a.data.date);
  const dateB = new Date(b.data.date);
  return dateA > dateB ? -1 : 1;
}).filter((p) => {
  return p.slug.split("/")?.[0] === "announcements";
}).reverse();
---

<Layout title="Nix & NixOS">
  <div class="bg-nixlighterblue">
    <Container class="flex flex-col md:flex-row items-center justify-between py-4">
      <b class="text-nixsemidarkblue text-lg">{posts[0].data.title}</b>
      <Button href={generatePathFromPost(posts[0])}>Announcement</Button>
    </Container>
  </div>
  <div class="bg-[url('/hero-bg.svg')] bg-cover bg-no-repeat bg-left">
    <Container class="text-white grid md:grid-cols-2 gap-8 py-16 md:py-24">
      <div class="flex flex-col gap-4 self-center">
        <h1 class="text-5xl font-heading font-bold leading-none">
          Declarative builds<br class="hidden md:inline-block" /> and deployments.
        </h1>
        <p class="text-lg font-extralight leading-7">
          Nix is a tool that takes a unique approach to package management and
          system configuration. Learn how to make reproducible, declarative and
          reliable systems.
        </p>
        <div class="flex flex-col md:flex-row justify-stretch gap-4">
          <Button href="/download" color="green" size="lg">Download</Button>
          <Button href="/learn" color="lightblue" size="lg">Get Started</Button>
        </div>
      </div>
      <Asciinema src="/demos/cover.cast" rows={20} cols={65} controls={true} poster="npt:0:01:22" large />
    </Container>
  </div>
  <div class="bg-[url('/divider/landing_search_top.svg')] bg-bottom bg-no-repeat pb-48 pt-16">
    <Container class="grid md:grid-cols-3 gap-4">
      {
        landingFeatures.map(async (feature) => {
          const { Content } = await feature.render();
          return (
            <div class="text-center flex flex-col">
              <Image
                src={feature.data.img}
                class="w-1/2 h-32 mx-auto mb-6"
                alt={feature.data.title}
                width="200"
                height="200"
              />
              <h2 class="text-3xl text-nixdarkblue font-heading font-bold leading-none mb-2">
                {feature.data.title}
              </h2>
              <div class="leading-loose text-light-bold">
                <Content />
              </div>
            </div>
          );
        })
      }
    </Container>
  </div>
  <div class="bg-nixlighterblue py-4">
    <Container class="flex justify-center flex-col w-full items-center gap-4">
      <h2
        class="text-4xl text-center md:w-2/3 text-nixdarkblue leading-tight font-heading font-bold pb-2"
      >
        Choose from Thousands of Packages
      </h2>
      <p class="font-extralight leading-relaxed text-2xl md:w-5/6 text-center">
        The Nix Packages collection (<a class="font-bold !text-nixdarkblue" href="#">Nixpkgs</a>) is a set of <span class="text-nixgreen font-bold">over 80 000 packages</span>
        for the Nix package manager.
      </p>
      <NixosSearchInput
        collection="packages"
        withSubmit
        />
    </Container>
  </div>
  <img src="/divider/landing_search_bottom.svg" class="w-full object-cover object-[60%_top] h-80" />
  <div>
    <Container>
      <h2
          class="text-4xl text-center w-full text-nixdarkblue font-heading font-bold pb-2"
      >
        Examples
      </h2>
      <div class="grid md:grid-cols-3 items-center gap-4 pb-8">
        {
          demos.data.map((demo) => {
            return (
              <div class="flex flex-col self-end gap-4">
                <p class="text-nixdarkblue text-2xl font-bold">{demo.title}</p>
                <Asciinema src={demo.file} rows={17} cols={65} controls={true} autoPlay={false} />
              </div>
            )
          })
        }
      </div>
    </Container>
  </div>
</Layout>
