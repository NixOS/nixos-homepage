---
import { getCollection, render } from 'astro:content';
import Container from '../components/layout/Container.astro';
import Divider from '../components/layout/Divider.astro';
import PageHeader from '../components/layout/PageHeader.astro';
import Button from '../components/ui/Button.astro';
import NixosSearchInput from '../components/ui/NixosSearchInput.astro';
import InlineSVG from '../components/util/InlineSVG.astro';
import Layout from '../layouts/Layout.astro';
const learningManuals = await getCollection('learningManuals');

learningManuals.sort((a, b) => a.id.localeCompare(b.id));

const learningFeatures = [
  {
    imgUrl: '/src/assets/image/learn/installGfx.svg',
    title: 'Install Nix',
    color: 'green',
    url: '/download#download-nix',
  },
  {
    imgUrl: '/src/assets/image/learn/firstStepsGfx.svg',
    title: 'First steps with Nix',
    color: 'orange',
    url: 'https://nix.dev/tutorials/first-steps/',
  },
  {
    imgUrl: '/src/assets/image/learn/howItWorksGfx.svg',
    title: 'How Nix works',
    color: 'lightblue',
    url: '/guides/how-nix-works',
  },
] as const;

const learningResources = [
  {
    title: 'The Nix hour',
    description:
      'A weekly beginner-oriented interactive video lecture on all things Nix. Running since October 2022.',
    url: 'https://www.youtube.com/playlist?list=PLyzwHTVJlRc8yjlx4VR4LU5A5O44og9in',
    buttonText: 'Watch on Youtube',
  },
  {
    title: 'NixOS Wiki',
    description: 'A user-maintained wiki for Nix and NixOS',
    url: 'https://wiki.nixos.org/',
    buttonText: 'Check the wiki',
  },
  {
    title: 'Nix Pills',
    description:
      'A low-level tutorial on building software packages with Nix, showing in detail how Nixpkgs is constructed.',
    url: '/guides/nix-pills',
    buttonText: 'Take the Pills',
  },
] as const;
---

<Layout title="Learn Nix | Nix & NixOS">
  <PageHeader text="Learn" />
  <Container class="grid gap-4 py-16 md:grid-cols-3">
    {
      learningFeatures.map((feature) => (
        <div class="border-0.5 border-nix-blue-darker flex flex-col justify-center gap-8 rounded-2xl p-8">
          <InlineSVG src={feature.imgUrl} class="h-28" />
          <Button size="lg-full" color={feature.color} href={feature.url}>
            {feature.title}
          </Button>
        </div>
      ))
    }
  </Container>
  <Divider style="slope" mirrorY mirrorX />
  <div class="bg-nix-blue py-8 text-white md:px-8">
    <Container>
      <h2 class="font-heading pb-8 text-4xl font-extrabold">Search</h2>
      <div class="grid gap-4 md:grid-cols-2">
        <div>
          <h3 class="font-heading mb-4 text-2xl font-extrabold">
            Nix packages
          </h3>
          <NixosSearchInput
            color="white"
            size="sm-full"
            collection="packages"
          />
        </div>
        <div>
          <h3 class="font-heading mb-4 text-2xl font-extrabold">
            NixOS options
          </h3>
          <NixosSearchInput color="white" size="sm-full" collection="options" />
        </div>
      </div>
    </Container>
  </div>
  <Divider style="slope" mirrorX />
  <Container class="grid items-start gap-4 py-16 md:grid-cols-3">
    {
      learningManuals.map(async (manual) => {
        const { Content } = await render(manual);
        return (
          <div class="border-0.5 border-nix-blue-darker flex flex-col items-center justify-start gap-4 rounded-2xl p-4">
            <article>
              <InlineSVG
                src="/src/assets/image/doc-icon.svg"
                class="img-noadjust float-left inline h-20 w-20 pr-6"
              />
              <h2 class="font-heading text-nix-blue mb-4 text-3xl leading-none font-bold">
                {manual.data.title}
              </h2>
              <div class="leading-relaxed font-extralight">
                <Content />
              </div>
            </article>
            <Button size="sm-mobfull" color="green" href={manual.data.url}>
              Full {manual.data.title}
            </Button>
          </div>
        );
      })
    }
  </Container>
  <Divider style="slope" mirrorY />
  <div class="bg-nix-blue py-8 text-white md:px-8">
    <Container>
      <h2 class="font-heading pb-8 text-4xl font-extrabold">
        Other learning resources
      </h2>
      <div class="grid gap-12 pb-12 md:grid-cols-3 md:gap-4">
        {
          learningResources.map((item) => (
            <div class="flex flex-col items-start">
              <h3 class="font-heading mb-2 text-2xl font-extrabold">
                {item.title}
              </h3>
              <p class="mb-4 leading-relaxed font-light">{item.description}</p>
              <Button size="sm-mobfull" color="orange" href={item.url}>
                {item.buttonText}
              </Button>
            </div>
          ))
        }
      </div>
    </Container>
  </div>
</Layout>
