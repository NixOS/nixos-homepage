---
import "asciinema-player/dist/bundle/asciinema-player.css";
import { AsciinemaSettings } from "asciinema-player";

interface Props {
  src: string;
  settings?: AsciinemaSettings;
  class?: string;
}

const defaultSettings = {
  cols: 77,
  rows: 24,
  autoPlay: false,
  loop: true,
  controls: 'auto',
  fit: false,
  terminalFontFamily: 'Fira Code Variable',
  terminalFontSize: '0.6rem',
};

const {
  src,
  settings = {},
  class: extraClasses = "",
}: Props = Astro.props;


const demoId = "asciinema-demo-" + src.split("/").pop().split(".")[0];
---

<asciinema-player
  id={demoId}
  class={extraClasses}
  data-src={src}
  data-settings={JSON.stringify({...defaultSettings, ...settings})}
>
</asciinema-player>

<script>
  import * as AsciinemaPlayer from "asciinema-player";
  class Asciinema extends HTMLElement {
    constructor() {
      super();
      const src = this.dataset.src;
      let settings = JSON.parse(this.dataset.settings);

      if (window.location.hash === `#${this.id}`) {
        settings.autoPlay = true;
      }

      AsciinemaPlayer.create(src, this, settings)

    }
  }

  customElements.define("asciinema-player", Asciinema);
</script>
