---

import fs from "node:fs";

import CodeInline from "../../layout/CodeInline.astro";
import Button from "../../ui/Button.astro";

const NIXOS_VERSION = import.meta.env.NIXOS_STABLE_SERIES;
// TODO: amis for 23.11 do not exist yet, use latest for now
const NIXOS_AMIS = JSON.parse(fs.readFileSync(import.meta.env.NIXOS_AMIS, 'utf8')).latest

const amis = Object.entries(NIXOS_AMIS)
  .map(([region, value]) => {
    if (!("hvm-ebs" in value)) {
      return null;
    }
    return {
      region,
      ami: value["hvm-ebs"],
      storage: "EBS",
      virtualisation: "Hardware",
    }
  })
  .filter((x) => x !== null);

---

<script>
  const awsSelection = document.querySelector(".select-region");
  const awsUrl = "https://console.aws.amazon.com/ec2/home"

  function updateAwsLaunch(region, ami) {
    document
      .querySelector(".launch-aws")
      .setAttribute("href", awsUrl + "?region=" + region + "#launchAmi=" + ami);
  }

  // Display the current AMI and set correct Launch link.
  // Need if page is soft reloaded.
  function setupAwsLaunch() {
    const region = awsSelection.value;
    const ami = document.querySelector("#launch-amazon-" + region);
    ami.classList.add("selected");
    const amiText = document.querySelector("#launch-amazon-" + region + " code").innerText;

    updateAwsLaunch(region, amiText);
  }
  setupAwsLaunch();

  // when client changes AWS region
  awsSelection.addEventListener('change', function(event) {

    // remove all AMIs from table
    const allAmis = document.querySelectorAll("[id^=launch-amazon-");
    Array.from(allAmis).forEach((ami) => ami.classList.remove("selected"));

    // add new AMI to table
    const newRegion = this.value;
    const newAmi = document.querySelector("#launch-amazon-" + newRegion);
    newAmi.classList.add("selected");

    const newAmiText = document.querySelector("#launch-amazon-" + newRegion + " code").innerText;

    console.log(newAmi);

    updateAwsLaunch(newRegion, newAmiText);
  });
</script>

<div class="launch-amazon [&_tr.selected]:table-row">
  <span class="font-bold text-xl">Choose region: </span>
  <select class="text-xl px-2 py-1 border-1 w-full md:w-auto border-gray-950 font-normal outline-nixlightblue outline-2 focus:outline focus:border-nixlightblue bg-transparent rounded-full placeholder-gray-400 text-normal text-nixdarkblue placeholder-grey-200">
    {amis.map((option) => {
      const selected = (option.region === "ap-east-1")
      return (<option value={option.region} {selected}>{option.region}</option>)
    })}
  </select>
  <table class="bg-nixlighterblue p-[1rem] my-[1rem] border-separate rounded-2xl w-full">
    <thead class="text-lg text-nixlightblue">
      <tr>
        <th>Root storage</th>
        <th>Virtualisation</th>
        <th colspan="2">AMI</th>
      </tr>
    </thead>
    <tbody class="[&>tr]:hidden text-center font-bold text-lg">
      {amis.map((option) => (
        <tr id={"launch-amazon-"+option.region}>
          <td>{option.storage}</td>
          <td>{option.storage}</td>
          <td colspan="2"><CodeInline>{option.ami}</CodeInline></td>
        </tr>
      ))}
    </tbody>
  </table>

  <Button
    color="semidarkblue"
    size="sm"
    href="#"
    classList={['launch-aws', 'w-full md:w-auto block md:inline text-center md:text-left']}
  >
    Launch
  </Button>
</div>
