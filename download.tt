[% WRAPPER layout.tt title="Download Nix / NixOS" handlesLayout="1" %]
[% USE IO.All %]
[% USE JSON.Escape %]

<div class="page-title">
  <h1>Download</h1>
</div>

<section id="download-nix" class="download-header">
  <div>
    <h1>Nix<span>: the package manager</span></h1>
    <div>
      <h2>Current version</h2>
      <a href="#">[% latestNixVersion %]</a>
    </div>
  </div>
</section>

<section class="download-nix">
  <div class="collapse">
    <div>
      <article id="nix-install-linux">
        <h2>Linux</h2>

        <h3>Multi-user installation (recommended)</h3>
        <p>
          Install Nix via the
          <strong>recommended</strong>
          <a href="[%nixManual%]/installation/multi-user.html">multi-user installation</a>:
        </p>
        <pre class="terminal-console">
<span class="shell-prompt">$ </span>sh &lt;(curl -L https://nixos.org/nix/install) --daemon</pre>
        <p>
          We recommend the multi-user install if you are on Linux running systemd, with SELinux disabled and
          you can authenticate with <code>sudo</code>.
        </p>

        <h3>Single-user installation</h3>
        <p>
          Install Nix via the
          <a href="[%nixManual%]/installation/single-user.html">single-user installation</a>:
        </p>
        <pre class="terminal-console">
<span class="shell-prompt">$ </span>sh &lt;(curl -L https://nixos.org/nix/install) --no-daemon</pre>
        <p>
          Above command will perform a single-user installation of Nix, meaning
          that <code>/nix</code> is owned by the invoking user. You should run
          this under your usual user account, not as <code>root</code>. The
          script will invoke  <code>sudo</code> to create <code>/nix</code> if
          it doesn’t already exist.
        </p>

        <h3>Which type of installation should you choose?</h3>
        <p>
          This depends on your requirements, but here is a short list of
          reasons why <strong>we recommend</strong>
          <a href="[%nixManual%]/installation/multi-user.html">multi-user installation</a>:
        </p>

        <h5>Pros</h5>
        <ul>
          <li>Better build isolation (and that is what Nix is all about)</li>
          <li>Better security (a build can not write somewhere in your home)</li>
          <li>Sharing builds between users</li>
        </ul>

        <h5>Cons</h5>
        <ul>
          <li>Requires <code>root</code> to run the daemon</li>
          <li>More involved installation (creation of <code>nixbld* users</code>, installing a systemd unit, ...</li>
          <li>Harder to uninstall</li>
        </ul>
      </article>

      <article id="nix-install-macos">
        <h2>MacOS</h2>
        <h3>Multi-user installation</h3>
        <p>
          Install Nix via the
          <strong>recommended</strong>
          <a href="[%nixManual%]/installation/multi-user.html">multi-user installation</a>:
        </p>
        <pre class="terminal-console">
<span class="shell-prompt">$ </span>sh &lt;(curl -L https://nixos.org/nix/install)</pre>
        <p>
          We believe we have ironed out how to cleanly support the read-only
          root on modern macOS. Please
          <a href="[%nixManual%]/installation/installing-binary.html#macos-installation">consult the manual</a>
          on details what the installation script does.
        </p>
      </article>

      <article id="nix-install-windows">
        <h2>Windows (WSL2)</h2>
        <h3>Single-user installation</h3>
        <p>
          Install Nix via the
          <a href="[%nixManual%]/installation/single-user.html">single-user installation</a>:
        </p>
        <pre class="terminal-console">
<span class="shell-prompt">$ </span>sh &lt;(curl -L https://nixos.org/nix/install) --no-daemon</pre>
      </article>

      <article id="nix-install-docker">
        <h2>Docker</h2>
        <p>Start a Docker shell with Nix:</p>
        <pre class="terminal-console">
<span cls="shell-prompt">$ </span>docker run -it nixos/nix</pre>
        <p>Or start a Docker shell with Nix exposing a <code>workdir</code> directory:</p>
        <pre class="terminal-console">
<span cls="shell-prompt">$ </span>mkdir workdir
<span cls="shell-prompt">$ </span>docker run -it -v $(pwd)/workdir:/workdir nixos/nix</pre>
        <p>The <code>workdir</code> example from above can be also used to start hacking on nixpkgs:</p>
        <pre class="terminal-console">
<span cls="shell-prompt">$ </span>git clone --depth=1 https://github.com/NixOS/nixpkgs.git
<span cls="shell-prompt">$ </span>docker run -it -v $(pwd)/nixpkgs:/nixpkgs nixos/nix
<span cls="shell-prompt">docker&gt; </span>nix-build -I nixpkgs=/nixpkgs -A hello
<span cls="shell-prompt">docker&gt; </span>find ./result # this symlink points to the build package</pre>
      </article>

      <article id="nix-more">
        <h2>More ...</h2>
        <p>The following release items are also available:</p>
        <ul>
          <li><a href="[%nixManual%]/release-notes/rl-[%latestNixVersion | remove('\.\d*$')%].html">Release notes</a></li>
          <li>
            <a href="[%nixManual%]">Manual</a>.
            Please read the <a href="[%nixManual%]/quick-start.html">“Quick Start” section of the manual</a>
            for an overview of how to install and use Nix.
          </li>
          <li>Old releases are <a href="https://releases.nixos.org/?prefix=nix">also available</a>.</li>
        </ul>
      </article>
    </div>
  </div>
</section>

<section id="download-nixos" class="download-header">
  <div>
    <h1>NixOS<span>: the Linux distribution</span></h1>
    <div>
      <h2>Current version</h2>
      <a href="#">[% latestNixOSSeries %]</a>
    </div>
  </div>
</section>

<section class="download-nixos">
  <div class="collapse">
    <div>
      <article id="nixos-iso">
        <h2>ISO image</h2>
        <p>You can install NixOS on physical hardware by burning one of the CD
          images onto a blank CD/DVD disk, or <a
            href="https://nixos.org/nixos/manual/index.html#sec-booting-from-usb">by
            copying it onto a USB stick</a>. For <strong>installation
            instructions</strong>, please see the <a href="[%nixosManual%]">manual</a>.</p>

        <h3>Graphical ISO image</h3>

        <p>The graphical installation ISO image <strong>contains the graphical NixOS
            installer</strong> as well as a <strong>Desktop Environment</strong>
          and several applications. It’s a <em>live CD</em>, so it allows you
          to get an impression of NixOS (and the Nix package manager) without
          installing it.</p>

        [% prefix = "https://channels.nixos.org/nixos-" _ latestNixOSSeries %]

        <ul class="download-buttons">
          <li>
            <a href="[%prefix%]/latest-nixos-gnome-x86_64-linux.iso">Download (GNOME, 64-bit Intel/AMD)</a>
            <a href="[%prefix%]/latest-nixos-gnome-x86_64-linux.iso.sha256">(SHA-256)</a>
            <span class="label -success">Recommended for most users</span>
          </li>
          <li>
            <a href="[%prefix%]/latest-nixos-gnome-aarch64-linux.iso">Download (GNOME, 64-bit ARM)</a>
            <a href="[%prefix%]/latest-nixos-gnome-aarch64-linux.iso.sha256">(SHA-256)</a>
          </li>
          <li>
            <a href="[%prefix%]/latest-nixos-plasma5-x86_64-linux.iso">Download (Plasma Desktop, 64-bit Intel/AMD)</a>
            <a href="[%prefix%]/latest-nixos-plasma5-x86_64-linux.iso.sha256">(SHA-256)</a>
          </li>
          <li>
            <a href="[%prefix%]/latest-nixos-plasma5-aarch64-linux.iso">Download (Plasma Desktop, 64-bit ARM)</a>
            <a href="[%prefix%]/latest-nixos-plasma5-aarch64-linux.iso.sha256">(SHA-256)</a>
          </li>
        </ul>

        <p>Note that while the image itself only comes in GNOME and Plasma
        variations, the included installer also allows installing various other
        desktops, or installing without a desktop.</p>

        <h3>Minimal ISO image</h3>

        <p>The minimal installation ISO image <strong>does not contain the
            graphical user interface</strong>, and is therefore a lot smaller.
          You have to
          <a href="[%root%]manual/nixos/stable/index.html#ch-installation">
            <strong>run the installer from the console</strong>
          </a>. It
          contains a number of rescue tools.</p>

        <ul class="download-buttons">
          <li>
            <a href="[%prefix%]/latest-nixos-minimal-x86_64-linux.iso">Download (64-bit Intel/AMD)</a>
            <a href="[%prefix%]/latest-nixos-minimal-x86_64-linux.iso.sha256">(SHA-256)</a>
          </li>
	  <li>
            <a href="[%prefix%]/latest-nixos-minimal-aarch64-linux.iso">Download (64-bit ARM)</a>
            <a href="[%prefix%]/latest-nixos-minimal-aarch64-linux.iso.sha256">(SHA-256)</a>
          </li>
          <li>
            <a href="[%prefix%]/latest-nixos-minimal-i686-linux.iso">Download (32-bit Intel/AMD)</a>
            <a href="[%prefix%]/latest-nixos-minimal-i686-linux.iso.sha256">(SHA-256)</a>
          </li>
        </ul>
      </article>
      <article id="nixos-virtualbox">
        <h2>VirtualBox</h2>
        <aside class="notice-box -warning">
          <strong>This is a demo appliance</strong> for VirtualBox (in OVA format).
        </aside>
        <p>VirtualBox image includes the <strong>Plasma Desktop</strong> (was KDE) as
          well as <strong>the VirtualBox guest additions</strong>.</p>
        <ul class="download-buttons">
          <li>
            <a href="[%prefix%]/latest-nixos-x86_64-linux.ova">Download (64-bit)</a>
            <a href="[%prefix%]/latest-nixos-x86_64-linux.ova.sha256">(SHA-256)</a>
          </li>
        </ul>
        <h3>To use it</h3>
        <ul>
          <li>Download the OVA file using the button above.</li>
          <li>Open VirtualBox.</li>
          <li>Run <code>File → Import Appliance</code> from the menu.</li>
          <li>Select previously downloaded OVA file.</li>
          <li>Click <code>Import</code>.</li>
          <li>You can then start the virtual machine.</li>
          <li>You can log in as <strong>user <code>demo</code></strong>,
            <strong>password <code>demo</code></strong>.</li>
          <li>To obtain a root shell, run
            <code>sudo -i</code> in the terminal (<code>konsole</code>).</li>
        </ul>
      </article>
      <article id="nixos-amazon">
        <h2>Amazon EC2</h2>
        <p>NixOS can be deployed to Amazon EC2 with a pre-generated AMI image
          that you can select below.</p>

        <h3>Via AWS Management Console</h3>
        <p>You can create an instance using the AWS Management Console by
          selecting the region and clicking the Launch button.</p>

        <div class="download-amazon">
          <strong>Choose region:</strong>
          <select>
            [% amis = JSON.Escape.json_decode(IO.All.new(nixosAmis).all).$latestNixOSSeries %]
            [% FOREACH region IN amis.keys.sort %]
            <option value="[% region %]">[% region %]</option>
            [% END %]
          </select>
          <table>
            <thead>
              <tr>
                <th>Root storage</th>
                <th>Virtualisation</th>
                <th colspan="2">AMI</th>
              </tr>
            </thead>
            <tbody>
              [% amis = JSON.Escape.json_decode(IO.All.new(nixosAmis).all).$latestNixOSSeries; type = "hvm-ebs" %]
              [% FOREACH region IN amis.keys.sort; ami = amis.$region.$type %]
              <tr id="download-amazon-[% region %]">
                <td>EBS</td>
                <td>Hardware</td>
                <td colspan="2"><code>[% ami %]</code></td>
              </tr>
              [% END %]
            </tbody>
          </table>
          <ul class="download-buttons">
            <li>
              <a href="https://console.aws.amazon.com/ec2/home" class="">Launch</a>
            </li>
          </ul>
        </div>

        <h3>Via Command Line</h3>

        <p> You can also create an instance from the command line. For example,
          to create an instance in region <code>[% region = "eu-west-1"; type =
            "hvm-ebs"; ami = amis.$region.$type; region %]</code> using the EC2
          API tools, just run:</p>

        <pre class="terminal-console">
$ nix-shell -p ec2_api_tools
(nix-shell) $ ec2-run-instances [% ami %] --region [% region %] -k <em>my-key-pair</em></pre>

      </article>
      <article id="nixos-more">
        <h2>More ...</h2>
        <p>The following release items are also available:</p>
        <ul>
          <li><a href="[%nixosManual%]/release-notes.html#sec-release-[%latestNixOSSeries%]">Release notes</a></li>
          <li><a href="[%nixosManual%]">Manual</a>.</li>
          <li>Old releases are <a href="https://releases.nixos.org/?prefix=nixos">also available</a>.</li>
        </ul>
      </article>
    </div>
  </div>
</section>

[% END %]
