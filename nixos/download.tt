[% WRAPPER layout.tt title="Getting NixOS " _ latestNixOSSeries menu='nixos' %]
[% USE IO.All %]
[% USE JSON.Escape %]

<p>The latest stable release series is
<strong>[%latestNixOSSeries%]</strong>.  Below are links to
CD/DVD images and VirtualBox appliances containing the <a
href="https://nixos.org/channels/nixos-[%latestNixOSSeries%]">latest
release</a> in this series.  <a class="btn btn-large btn-success
pull-right" href="[%root%]nixos/manual/"> Next Step: Manual <i
class="fa fa-arrow-right"></i> </a> </p>

<section><h2 id="installation-isos">Installation CDs/DVDs/USB Sticks</h2>

<p>You can install NixOS on physical hardware by burning one of the CD
images onto a blank CD/DVD disk, or <a
href="https://nixos.org/nixos/manual/index.html#sec-booting-from-usb">by
copying it onto a USB stick</a>.  For <strong>installation
instructions</strong>, please see the <a
href="[%nixosManual%]">manual</a>.</p>

<div class="alert alert-block">
Please note that NixOS at the moment lacks a nice, user-friendly
graphical installer.  Therefore this form of installation may not be
suitable for novice Linux users.</div>

<p>The <strong>graphical installation CD</strong> contains the NixOS
installer as well as X11, Plasma 5 Desktop and several applications.  It’s a
<em>live CD</em>, so it allows you to get an impression of NixOS (and
the Nix package manager) before installing it.</p>

[% prefix = "https://channels.nixos.org/nixos-" _ latestNixOSSeries %]

<ul>
  <li><a href="[%prefix%]/latest-nixos-graphical-x86_64-linux.iso">Graphical live CD, 64-bit Intel/AMD</a> (<a href="[%prefix%]/latest-nixos-graphical-x86_64-linux.iso.sha256">SHA-256</a>)
    <span class="label label-info">Recommended for most users</span></li>
</ul>

<p>The <strong>minimal installation CD</strong> does not contain X11,
and is therefore a lot smaller.  You have to run the installer from
the console.  It contains a number of rescue tools.</p>

<ul>
  <li><a href="[%prefix%]/latest-nixos-minimal-x86_64-linux.iso">Minimal installation CD, 64-bit Intel/AMD</a> (<a href="[%prefix%]/latest-nixos-minimal-x86_64-linux.iso.sha256">SHA-256</a>)</li>
  <li><a href="[%prefix%]/latest-nixos-minimal-i686-linux.iso">Minimal installation CD, 32-bit Intel/AMD</a> (<a href="[%prefix%]/latest-nixos-minimal-i686-linux.iso.sha256">SHA-256</a>)</li>
</ul>

</section>

<section><h2 id="virtualbox-appliances">VirtualBox appliances</h2>

<p>This is a demo appliance for VirtualBox (in OVA format) that has
X11 and Plasma 5 enabled, as well as the VirtualBox guest additions.  To
use it, download the OVA file, open VirtualBox, run “File → Import
Appliance” from the menu, select the OVA file, and click “Import”.
You can then start the virtual machine.  When the KDE login screen
appears, you can log in as <strong>user <tt>demo</tt></strong>,
<strong>password <tt>demo</tt></strong>.  To obtain a root shell, run
<tt>sudo -i</tt> in the KDE terminal (<tt>konsole</tt>).</p>

<ul>
  <li><a href="[%prefix%]/latest-nixos-x86_64-linux.ova">VirtualBox appliance, 64-bit Intel/AMD</a> (<a href="[%prefix%]/latest-nixos-x86_64-linux.ova.sha256">SHA-256</a>)</li>
</ul>

</section>

<section><h2 id="amazon-ec2">Amazon EC2 AMIs</h2>

<p>If you are an EC2 user, you can fire up a NixOS instance instantly
by using one of the AMIs listed below.</p>

<div class="row">
<table class="table">
  <thead>
    <tr><th>Region</th><th>Root storage</th><th>Virtualisation</th><th>AMI</th><th></th></tr>
  </thead>
  <tbody>
    [% amis = JSON.Escape.json_decode(IO.All.new(nixosAmis).all).$latestNixOSSeries %]
    [% FOREACH region IN amis.keys.sort %]
      [% FOREACH type IN amis.$region.keys.sort; ami = amis.$region.$type %]
        <tr>
          <td><tt>[% region %]</tt></td>
          <td>[% IF type.search("ebs"); THEN; "EBS"; ELSE; "Instance"; END; %]</td>
          <td>[% IF type.search("hvm"); THEN; "Hardware"; ELSE; "Para"; END; %]</td>
          <td><tt>[% ami %]</tt></td>
        <td><a href="https://console.aws.amazon.com/ec2/home?region=[%region%]#launchAmi=[%ami%]" class="btn btn-primary btn-mini">Launch</a></td>
        </tr>
      [% END %]
    [% END %]
  </tbody>
</table>
</div>

<p>You can create an instance using the AWS Management Console by
clicking one of the Launch buttons. You can also create an instance
from the command line. For example, to create an instance in region
<tt>[% region = "eu-west-1"; type = "pv-ebs"; ami =
amis.$region.$type; region %]</tt> using the EC2 API tools, just
run:</p>

<pre>
$ ec2-run-instances [% ami %] --region [% region %] -k <em>my-key-pair</em>
</pre>

</section>

<section><h2 id="microsoft-azure">Microsoft Azure BLOBs</h2>

<p>If you are an Azure user, you can manually create a NixOS instance
by using one of the bootstrap BLOBs listed below.</p>

<div class="row">
<table class="table">
  <thead>
    <tr><th>NixOS version</th><th>BLOB URL</th></tr>
  </thead>
  <tbody>
    [% blobs = JSON.Escape.json_decode(IO.All.new(nixosAzureBlobs).all) %]
    [% FOREACH version IN blobs.keys.sort; blob = blobs.$version %]
      <tr>
        <td><tt>[% version %]</tt></td>
        <td><a href="[% blob %]"><tt>[% blob %]</tt></a></td>
      </tr>
    [% END %]
  </tbody>
</table>
</div>

<p>You can create an instance from the command line.
For example, to create an instance of version
<tt>[% blob = blobs.$latestNixOSSeries; latestNixOSSeries %]</tt>
of NixOS  using azure-cli, just run:</p>

<pre>
# settings
# vm name must be lowercase and letters/numbers only because it's also used as the domain name
export VM_NAME="nixosvm"
export RESOURCE_GROUP="rg-nixosvm"
export LOCATION="eastus"
export STORAGE_ACCOUNT="nixosvm"
export SOURCE_URI="<tt>[% blob %]</tt>"

# create group
az group create \
    --name "$RESOURCE_GROUP" \
    --location "$LOCATION

# create storage
az storage account create \
    --name "$STORAGE_ACCOUNT" \
    --group "$RESOURCE_GROUP" \
    --location "$LOCATION" \
    --sku Standard_LRS

az storage account keys list \
    --name "$STORAGE_ACCOUNT" \
    --group $RESOURCE_GROUP

# export one of the storage access keys
export STORAGE_ACCOUNT_KEY="..."
echo $STORAGE_ACCOUNT_KEY

az storage container create \
    --account-name "$STORAGE_ACCOUNT"
    --account-key "$STORAGE_ACCOUNT_KEY"
    --name vm-images

# copy the image blob
az storage blob copy start \
    --source-uri "$SOURCE_URI" \
    --destination-blob "nixos-unstable-nixops.vhd" \
    --destination-container "vm-images" \
    --account-name "$STORAGE_ACCOUNT" \
    --account-key "$STORAGE_ACCOUNT_KEY"

# wait for blob copy status to change pending->success
az storage blob show \
    --name "nixos-unstable-nixops.vhd" \
    --container-name "vm-images" \
    --account-name "$STORAGE_ACCOUNT" \
    --account-key "$STORAGE_ACCOUNT_KEY"


# create vm
az vm create \
    --name "$VM_NAME" \
    --resource-group "$RESOURCE_GROUP" \
    --location "$LOCATION" \
    --public-ip-address-dns-name "$VM_NAME" \
    --image "https://$STORAGE_ACCOUNT.blob.core.windows.net/vm-images/nixos-unstable-nixops.vhd" \
    --storage-account "$STORAGE_ACCOUNT" \
    --storage-container-name "$VM_NAME" \
    --use-unmanaged-disk \
    --os-disk-size-gb "32" \
    --os-type linux \
    --admin-username "azureuser" \
    --generate-ssh-keys

# show machine properties and log in
az vm show \
    --name "$VM" \
    --resource-group "$GROUP"

ssh azureuser@"$VM_NAME"."$LOCATION".cloudapp.azure.com
</pre>

</section>

<section><h2 id="google-compute-engine">Google Compute Engine Images</h2>

<p>If you are Google Cloud Platform user, you can create a NixOS image using one of the raw disks listed below. You can then create a NixOS instance using the image.</p>

<div class="row">
<table class="table">
  <thead>
    <tr><th>NixOS version</th><th>URL</th></tr>
  </thead>
  <tbody>
    [% images = JSON.Escape.json_decode(IO.All.new(nixosGCE).all) %]
    [% FOREACH version IN images.keys.sort; url = images.$version %]
      <tr>
        <td><tt>[% version %]</tt></td>
        <td><a href="[% url %]"><tt>[% url %]</tt></a></td>
      </tr>
    [% END %]
  </tbody>
</table>
</div>

<p>For example:</p>

<pre>
image=my-nixos-image
source_uri=https://storage.googleapis.com/nixos-cloud-images/nixos-image-18.09.1228.a4c4cbb613c-x86_64-linux.raw.tar.gz
source_uri=$(sed 's%gs:/%https://storage.googleapis.com%' &lt;&lt;&lt; $source_uri)
gcloud compute images create $image --source-uri=$source_uri
gcloud compute instances create instance-1 --image=$image
</pre>

</section>

<section><h2 id="unstable-releases">Unstable releases</h2>

<p>If you are a developer who wants to contribute to NixOS, or if you
just want the latest and greatest, you can also install the <a
href="https://nixos.org/channels/nixos-unstable">most recent unstable
release</a>.</p>

</section>

[% END %]
